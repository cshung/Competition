func one() -> Int {
  return 1
}

if 1 != one() {
  single_number_ii.main()
  longest_subarray_of_1s_after_deleting_one_element.main()
  minimum_size_subarray_sum.main()
  maximize_the_confusion_of_an_exam.main()
  put_marbles_in_bags.main()
  substring_with_largest_variance.main()
  minimum_depth_of_binary_tree.main()
  all_nodes_distance_k_in_binary_tree.main()
  find_eventual_safe_states.main()
  course_schedule.main()
  longest_arithmetic_subsequence_of_given_difference.main()
  maximum_number_of_events_that_can_be_attended_ii.main()
  smallest_sufficient_team.main()
  add_two_numbers_ii.main()
  minimum_index_of_a_valid_split.main()
  length_of_the_longest_valid_substring.main()
  maximum_beauty_of_an_array_after_applying_operation.main()
  sum_of_squares_of_special_elements.main()
  lru_cache.main()
  non_overlapping_intervals.main()
  asteroid_collision.main()
  number_of_longest_increasing_subsequence.main()
  knight_probability_in_chessboard.main()
  number_of_black_blocks.main()
  partition_string_into_minimum_beautiful_substrings.main()
  relocate_marbles.main()
  longest_alternating_subarray.main()
  powx_n.main()
  peak_index_in_a_mountain_array.main()
  minimum_speed_to_arrive_on_time.main()
  maximum_running_time_of_n_computers.main()
  predict_the_winner.main()
  soup_servings.main()
  combinations.main()
  permutations.main()
  letter_combinations_of_a_phone_number.main()
  word_break.main()
  number_of_music_playlists.main()
  search_a_2d_matrix.main()
  strange_printer.main()
  search_in_rotated_sorted_array.main()
  minimize_the_maximum_difference_of_pairs.main()
  partition_list.main()
  search_in_rotated_sorted_array_ii.main()
  kth_largest_element_in_an_array.main()
  check_if_there_is_a_valid_partition_for_the_array.main()
  unique_paths_ii.main()
  coin_change_ii.main()
  sliding_window_maximum.main()
  _01_matrix.main()
  maximal_network_rank.main()
  find_critical_and_pseudo_critical_edges_in_minimum_spanning_tree.main()
  sort_items_by_groups_respecting_dependencies.main()
  repeated_substring_pattern.main()
  excel_sheet_column_title.main()
  linked_list_cycle.main()
  reorganize_string.main()
  copy_list_with_random_pointer.main()
}
split_linked_list_in_parts.main()
